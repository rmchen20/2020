install.packages(c("BiocManager", "dplyr", "ggplot2", "HistData", "knitr", "mvtnorm", "reticulate"))
install.packages(c("ggplot2", "knitr"))
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)# please knit with `echo=TRUE, eval=TRUE`
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)# please knit with `echo=TRUE, eval=TRUE`
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)# please knit with `echo=TRUE, eval=TRUE`
install.packages("stringr")
install.packages("stringi")
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)# please knit with `echo=TRUE, eval=TRUE`
install.packages("rmarkdown")
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)# please knit with `echo=TRUE, eval=TRUE`
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)# please knit with `echo=TRUE, eval=TRUE`
install.packages("ggplot2")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install("sva")
install.packages(c("ggplot2", "dplyr", "tidyr", "HistData", "mvtnorm",
"reticulate"))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install("sva")
install.packages(c("ggplot2", "dplyr", "tidyr", "HistData", "mvtnorm",
"reticulate"))
# please knit with this command echoed.
BiocManager::valid()
# these packages are needed for HW2
# affy and affyPLM are needed to read the microarray data and run RMA
library(sva) # for batch effect correction. Contains ComBat and sva.
library(ggplot2) # for plotting
library(dplyr) # for data manipulation
library(reticulate) # needed to run python in Rstudio
# these next two are not essential to this course
library(mvtnorm) # need this to simulate data from multivariate normal
library(HistData) # need this for data
x1 <- c(1:10, 50)
mean(x1)
x1_na <- c(1:10, 50, NA)
mean(x1_na)
# your code here
mean(x1_na, na.rm=TRUE)
data(GaltonFamilies)
head(GaltonFamilies)
# your code here
GaltonFamilies[10,'childHeight']
# your code here
sum(GaltonFamilies["gender"] == "male")
sum(GaltonFamilies["gender"] == "female")
# your code here
nrow(GaltonFamilies)
# your code here
print("male:" + sum(GaltonFamilies["gender"] == "male"))
# your code here
print("male:" + str(sum(GaltonFamilies["gender"] == "male")))
# your code here
print(paste0("male:", sum(GaltonFamilies["gender"] == "male")))
sum(GaltonFamilies["gender"] == "female")
# your code here
print(paste0("male: ", sum(GaltonFamilies["gender"] == "male")))
print(paste0("female: ", sum(GaltonFamilies["gender"] == "female")))
# your code here
nrow(GaltonFamilies)
# your code here
mean(GaltonFamilies[GaltonFamilies["childNum"]==1, "childHeight"])
# your code here
?GaltonFamilies
# your code here
by_gender <- group_by(GaltonFamilies, "gender")
View(by_gender)
# your code here
by_gender <- group_by(GaltonFamilies, gender)
View(by_gender)
# your code here
by_gender <- group_by(GaltonFamilies, gender)
means <- summarise(GaltonFamilies, avgh = mean(childHeight, na.rm = TRUE))
View(means)
View(by_gender)
# your code here
maleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="male", "childHeight"])
femaleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="female", "childHeight"])
meanTable <- table(c(maleAvg, femaleAvg))
colnames(meanTable) <- c("male", "female")
# your code here
maleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="male", "childHeight"])
femaleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="female", "childHeight"])
means <- matrix(c(maleAvg, femaleAvg))
colnames(means) <- c("male", "female")
# your code here
maleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="male", "childHeight"])
femaleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="female", "childHeight"])
means <- matrix(c(maleAvg, femaleAvg),ncol=2,byrow=TRUE)
colnames(means) <- c("male", "female")
meanTable <- as.table(meanTable)
# your code here
maleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="male", "childHeight"])
femaleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="female", "childHeight"])
means <- matrix(c(maleAvg, femaleAvg),ncol=2,byrow=TRUE)
colnames(means) <- c("male", "female")
meanTable <- as.table(meanTable)
print(meanTable)
# your code here
maleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="male", "childHeight"])
femaleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="female", "childHeight"])
means <- matrix(c(maleAvg, femaleAvg),ncol=2,byrow=TRUE)
colnames(means) <- c("male", "female")
meanTable <- as.table(meanTable)
meanTable
# your code here
maleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="male", "childHeight"])
femaleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="female", "childHeight"])
means <- matrix(c(maleAvg, femaleAvg),ncol=2,byrow=TRUE)
colnames(means) <- c("male", "female")
means <- as.table(means)
means
# your code here
maleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="male", "childHeight"])
femaleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="female", "childHeight"])
means <- matrix(c(maleAvg, femaleAvg),ncol=2,byrow=TRUE)
rownames(means) <- c("average height")
colnames(means) <- c("male", "female")
means <- as.table(means)
means
# your code here
head(GaltonFamilies, 20)
# your code here
max(GaltonFamilies["family"])
# your code here
GaltonFamilies["family"]
# your code here
mutate_at(GaltonFamilies, "family", funs(max(., na.rm=TRUE)))
# your code here
GaltonFamilies["family"][1]
# your code here
GaltonFamilies["family",1]
# your code here
GaltonFamilies["family"]
# your code here
by_family <- group_by(GaltonFamilies, family
# your code here
by_family <- group_by(GaltonFamilies, family)
View(by_family)
# your code here
by_family <- group_by(GaltonFamilies, family)
numChild <- summarize(by_family, num=children)
# your code here
by_family <- group_by(GaltonFamilies, family)
numChild <- summarize(by_family, num=n())
avgChild <- mean(numChild)
# your code here
by_family <- group_by(GaltonFamilies, family)
numChild <- summarize(by_family, children = mean(children))
avgChild <- mean(numChild)
# your code here
by_family <- group_by(GaltonFamilies, "family")
numChild <- summarize(by_family, children = mean(children))
avgChild <- mean(numChild)
# your code here
by_family <- group_by(GaltonFamilies, "family")
numChild <- summarize(by_family, children = mean(children))
avgChild <- mean(numChild)
# your code here
mutate(GaltonFamilies,
childHeight_cm = childHeight * 2.54
)
head(GaltonFamilies)
# your code here
by_family <- group_by(GaltonFamilies, family)
numChild <- summarize(by_family, children = mean(children))
View(numChild)
View(numChild)
# your code here
by_family <- group_by(GaltonFamilies, family)
numChild <- summarize(by_family, children = mean(children))
avgChild <- mean(numChild["children"])
# your code here
by_family <- group_by(GaltonFamilies, family)
numChild <- summarize(by_family, children = mean(children))
numChild["children"]
# your code here
by_family <- group_by(GaltonFamilies, family)
numChild <- summarize(by_family, children = mean(children))
mean(numChild["children"])
# your code here
by_family <- group_by(GaltonFamilies, family)
numChild <- summarize(by_family, children = mean(children))
summarise(numChild,
avgChild = mean(children, na.rm = TRUE)
)
# your code here
by_family <- group_by(GaltonFamilies, family)
numChild <- summarize(by_family, children = mean(children))
summarise(numChild,
avgChildren = mean(children, na.rm = TRUE)
)
View(numChild)
View(numChild)
View(numChild)
# your code here
by_gender <- group_by(GaltonFamilies, gender)
avgHeight <- summarize(by_gender, avgHeight = mean(childHeight))
# maleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="male", "childHeight"])
# femaleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="female", "childHeight"])
# means <- matrix(c(maleAvg, femaleAvg),ncol=2,byrow=TRUE)
# rownames(means) <- c("average height")
# colnames(means) <- c("male", "female")
# means <- as.table(means)
# means
View(avgHeight)
View(avgHeight)
# your code here
by_gender <- group_by(GaltonFamilies, gender)
avgHeight <- summarize(by_gender, avgHeight = mean(childHeight))
means <- as.table(avgHeight)
View(numChild)
# your code here
by_gender <- group_by(GaltonFamilies, gender)
avgHeight <- summarize(by_gender, avgHeight = mean(childHeight))
avgHeight
# maleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="male", "childHeight"])
# femaleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="female", "childHeight"])
# means <- matrix(c(maleAvg, femaleAvg),ncol=2,byrow=TRUE)
# rownames(means) <- c("average height")
# colnames(means) <- c("male", "female")
# means <- as.table(means)
# means
# your code here
by_gender <- group_by(GaltonFamilies, gender)
avgHeight <- summarize(by_gender, avgHeight = mean(childHeight))
avgHeight
maleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="male", "childHeight"])
femaleAvg <- mean(GaltonFamilies[GaltonFamilies["gender"]=="female", "childHeight"])
means <- matrix(c(maleAvg, femaleAvg),ncol=2,byrow=TRUE)
rownames(means) <- c("average height")
colnames(means) <- c("male", "female")
means <- as.table(means)
means
# your code here
by_gender <- group_by(GaltonFamilies, gender)
avgHeight <- summarize(by_gender, avgHeight = mean(childHeight))
avgHeight
# your code here
by_gender <- group_by(GaltonFamilies, gender)
avgHeight <- summarize(by_gender, number = n())
avgHeight
print(paste0("male: ", sum(GaltonFamilies["gender"] == "male")))
print(paste0("female: ", sum(GaltonFamilies["gender"] == "female")))
# your code here
by_gender <- group_by(GaltonFamilies, gender)
breakdown <- summarize(by_gender, number = n())
breakdown
# your code here
hello <- filter(GaltonFamilies, "childNum" == 1)
mean(GaltonFamilies[GaltonFamilies["childNum"]==1, "childHeight"])
View(hello)
# your code here
mean(GaltonFamilies[GaltonFamilies["childNum"]==1, "childHeight"])
# your code here
GaltonFamilies <- mutate(GaltonFamilies,
childHeight_cm = childHeight * 2.54
)
head(GaltonFamilies)
# set seed for reproducibility
set.seed(1234)
N <- 25
ngroups <- 100000
sim_data <- data.frame(group = rep(1:ngroups, each = N),
X = rnorm(N * ngroups),
Y = rnorm(N * ngroups))
View(sim_data)
View(hello)
sim_data_sub <- sim_data %>% filter(group <= 100)
# your code here
GaltonFamilies %>%
group_by(gender) %>%
summarize(number = n())
by_gender <- group_by(GaltonFamilies, gender)
breakdown <- summarize(by_gender, number = n())
breakdown
# your code here
GaltonFamilies %>%
group_by(gender) %>%
summarize(number = n())
# your code here
GaltonFamilies %>%
group_by(gender) %>%
summarize(avgHeight = mean(childHeight))
# your code here
GaltonFamilies %>%
group_by(family) %>%
summarize(children = mean(children)) %>%
summarize(avgChildren = mean(children, na.rm = TRUE))
View(sim_data)
# your code here
corr(sim_data_sub[X], sim_data_sub[Y])
# your code here
cor(sim_data_sub[X], sim_data_sub[Y])
View(sim_data_sub)
# your code here
cor(sim_data_sub["X"], sim_data_sub["Y"])
# sim_corr <- sim_data_sub %>%
#   group_by(group) %>%
#   summarize(correlation = ) %>%
#   arrange(desc(correlation))
#
# head(sim_corr)
# your code here
sim_corr <- sim_data_sub %>%
group_by(group) %>%
summarize(correlation = cor(X, Y)) %>%
arrange(desc(correlation))
head(sim_corr)
# your code here
sim_corr <- sim_data %>%
group_by(group) %>%
summarize(correlation = cor(X, Y)) %>%
arrange(desc(correlation))
head(sim_corr)
# your code here
sim_corr[1]
# your code here
sim_corr[,1]
View(sim_corr)
# your code here
sim_corr["group",1]
# your code here
sim_corr["group"]
# your code here
sim_corr["group"][1]
# your code here
sim_corr[1,1]
# your code here
sim_data %>%
filter(group == sim_corr[1,1]) %>%
ggplot(aes(x = X, y = Y)) +
geom_point() +
ggtitle("Relation between X and Y") +
xlab("X") +
ylab("Y")
# your code here
sim_data %>%
filter(group == 99655) %>%
ggplot(aes(x = X, y = Y)) +
geom_point() +
ggtitle("Relation between X and Y") +
xlab("X") +
ylab("Y")
# your code here
sim_corr[1,1]
sim_data %>%
filter(group == 99655) %>%
ggplot(aes(x = X, y = Y)) +
geom_point() +
ggtitle("Relation between X and Y") +
xlab("X") +
ylab("Y")
# your code here
int(sim_corr[1,1])
# your code here
sim_corr[[1,1]]
sim_data %>%
filter(group == 99655) %>%
ggplot(aes(x = X, y = Y)) +
geom_point() +
ggtitle("Relation between X and Y") +
xlab("X") +
ylab("Y")
# your code here
sim_data %>%
filter(group == sim_corr[[1,1]]) %>%
ggplot(aes(x = X, y = Y)) +
geom_point() +
ggtitle("Relation between X and Y") +
xlab("X") +
ylab("Y")
# your code here
sim_data %>%
filter(group == sim_corr[[1,1]]) %>%
ggplot(aes(x = X, y = Y)) +
geom_point() +
ggtitle(paste0("Relationship between X and Y for Group ", sim_corr[[1,1]])) +
xlab("X") +
ylab("Y")
# your code here
sim_data %>%
filter(group == sim_corr[[1,1]]) %>%
ggplot(aes(x = X, y = Y, color=deeppink)) +
geom_point() +
ggtitle(paste0("Relationship between X and Y for Group ", sim_corr[[1,1]])) +
xlab("X") +
ylab("Y")
# your code here
sim_data %>%
filter(group == sim_corr[[1,1]]) %>%
ggplot(aes(x = X, y = Y, color = origin)) +
geom_point() +
ggtitle(paste0("Relationship between X and Y for Group ", sim_corr[[1,1]])) +
xlab("X") +
ylab("Y")
# your code here
sim_data %>%
filter(group == sim_corr[[1,1]]) %>%
ggplot(aes(x = X, y = Y)) +
geom_point(color = "deeppink") +
ggtitle(paste0("Relationship between X and Y for Group ", sim_corr[[1,1]])) +
xlab("X") +
ylab("Y")
N <- 100
Sigma <- matrix(c(1, 0.75, 0.75, 1), nrow = 2, ncol = 2) * 1.5
means <- list(c(11, 3), c(9, 5), c(7, 7), c(5, 9), c(3, 11))
dat <- lapply(means, function(mu)
rmvnorm(N, mu, Sigma))
dat <- as.data.frame(Reduce(rbind, dat)) %>%
mutate(Z = as.character(rep(seq_along(means), each = N)))
names(dat) <- c("X", "Y", "Z")
View(dat)
# your code here
cor(dat["X"], dat["Y"])
# your code here
dat %>%
ggplot(aes(x = X, y = Y)) +
geom_point(color = "deeppink") +
ggtitle("Relationship between X and Y") +
xlab("X") +
ylab("Y")
# your code here
sim_data %>%
filter(group == sim_corr[[1,1]]) %>%
ggplot(aes(x = X, y = Y)) +
geom_point(color = "hotpink") +
ggtitle(paste0("Relationship between X and Y for Group ", sim_corr[[1,1]])) +
xlab("X") +
ylab("Y")
# your code here
dat %>%
ggplot(aes(x = X, y = Y)) +
geom_point(color = "hotpink") +
ggtitle("Relationship between X and Y") +
xlab("X") +
ylab("Y")
# your code here
dat_corr <- dat %>%
group_by(Z) %>%
summarize(correlation = cor(X, Y)) %>%
arrange(desc(correlation))
# your code here
dat_corr <- dat %>%
group_by(Z) %>%
summarize(correlation = cor(X, Y))
head(dat_corr)
# your code here
dat_corr <- dat %>%
group_by(Z) %>%
summarize(correlation = cor(X, Y))
# your code here
dat_corr <- dat %>%
group_by(Z) %>%
summarize(correlation = cor(X, Y))
dat_corr
# your code here
dat %>%
group_by(Z) %>%
summarize(correlation = cor(X, Y))
# your code here
dat %>%
ggplot(aes(x = X, y = Y, color = Z)) +
geom_point() +
ggtitle("Relationship between X and Y for every Z") +
xlab("X") +
ylab("Y")
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)# please knit with `echo=TRUE, eval=TRUE`
